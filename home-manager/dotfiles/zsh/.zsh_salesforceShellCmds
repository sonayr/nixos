
alias nesto="sf org open --target-org ryan@nesto.ca -p /"
alias staging="sfdx org:open --target-org ryan@nesto.ca.staging"
alias staging2="sfdx org:open --target-org ryan@nesto.ca.staging2"
alias demo="sfdx org:open --target-org ryan@nesto.ca.migration"
alias qa="sfdx org:open --target-org ryan@nesto.ca.qa"
alias qa2="sfdx org:open --target-org ryan@nesto.ca.qa2"
alias partial="sfdx org:open --target-org ryan@nesto.ca.partial"
alias ryansb="sfdx org:open --target-org ryan@nesto.ca.ryansb"
alias retrieveNesto="sf project retrieve start --target-org nesto -m"
alias retrieveDemo="sf project retrieve start --target-org demo -m"
alias retrieveQa="sf project retrieve start --target-org qa2 -m"
alias retrieveStaging="sf project retrieve start --target-org staging2 -m"
alias deployPartial="SF_DISABLE_SOURCE_MEMBER_POLLING=true; sf project deploy start --target-org partial -m"
alias deployQa="SF_DISABLE_SOURCE_MEMBER_POLLING=true; sf project deploy start --target-org qa2 -c -m"
alias deployStaging="SF_DISABLE_SOURCE_MEMBER_POLLING=true; sf project deploy start --target-org staging2 -c -m"
alias deployDemo="SF_DISABLE_SOURCE_MEMBER_POLLING=true; sf project deploy start --target-org demo -c -m"
alias deleteStaging="sf project delete source --target-org staging2 -m"
alias deleteDemo="sf project delete source --target-org demo -m"
alias deleteQA="sf project delete source --target-org qa2 -m"
alias consultPage="sf org open -o staging2 -p lightning/n/Consultant_Managment"

function mirrorProd(){
    sf project retrieve start --target-org nesto -m $1 $@
    sf project deploy start --target-org staging2 -m $1 -c $@
    sf project deploy start --target-org qa2 -m $1 -c $@
    sf project deploy start --target-org demo -m $1 -c $@
}

function retrieve(){
    sf project retrieve start "$@"
}

function org(){
    if [ -z "$1" ] 
    then
        1=""
    else
        1="-o"$1
    fi

    sf org open -b chrome $1
}

function query(){
    if [[ ${1:l} == select* ]] 
    then
        2=$1
        1=""
    else 
        1="-o"$1
    fi
    sf data query $1 -q $2 $3 $4 $5
}

function runTest(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx apex:test:run -o $1 -w 50 -t $2 $3 $4 $5 $6
}
function reportUseage(){
    sf data query --target-org nesto -q "Select name,lastrundate from report where developername in ($1) order by lastrundate desc"
}

function createLabel(){
    if [ -z "$1" ] 
    then
        1="staging2"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/ExternalStrings/page?address=%2F101%2Fe%3FretURL%3D%252F101"
}
function reports(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "https://nesto.lightning.force.com/lightning/o/Report/home?queryScope=everything"
}
function oppfields(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/ObjectManager/Opportunity/FieldsAndRelationships/view"
}
function casefields(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/ObjectManager/Case/FieldsAndRelationships/view"
}
function accountfields(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/ObjectManager/Account/FieldsAndRelationships/view"
}
function leadfields(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/ObjectManager/Lead/FieldsAndRelationships/view"
}
function backup(){
    sf data query --target-org nesto -q "Select id,$1 from opportunity where $1 != null" -r csv > ~/Desktop/$1Backup.csv
}
function backup(){
    sf data query --target-org nesto -q "Select id,$1 from opportunity where $1 != null" -r csv > ~/Desktop/$1Backup.csv
}
function flows(){
    if [ -z "$1" ] 
    then
        1="nesto"
    fi
    sfdx org:open --target-org $1 -p "lightning/setup/Flows/home"
}
function testOpp(){
    sfdx org:open --target-org nesto -p "lightning/r/Opportunity/0065o000002DqGzAAK/view"
}
function taskFieldUseage(){
    sf data query --target-org nesto -q "Select count(id),max(createddate) from task where $1 != null" 
}
function oppFieldUseage(){
    sf data query --target-org nesto -q "Select count(id),max(createddate) from Opportunity where $1 != null" 
}
function oppHistory(){
     if [ -z "$2" ] 
    then
        2=$1
        1="nesto"
    fi
    sf data query --target-org $1 -q "Select field,newvalue,oldvalue,createdby.name,createddate from opportunityfieldHistory where Opportunityid = '$2' order by createddate desc"
}
function leadHistory(){
    if [ -z "$2" ] 
    then
        2=$1
        1="nesto"
    fi
    sf data query --target-org $1 -q "Select field,newvalue,oldvalue,createdby.name,createddate from LeadHistory where LeadId = '$2' order by createddate desc"
}
function submisisonHistory(){
     if [ -z "$2" ] 
    then
        2=$1
        1="nesto"
    fi
    sf data query --target-org $1 -q "Select field,newvalue,oldvalue,createdby.name,createddate from Submission_Note__History where ParentId = '$2' order by createddate desc"
}
function caseHistory(){
     if [ -z "$2" ] 
    then
        2=$1
        1="nesto"
    fi
    sf data query --target-org $1 -q "Select field,newvalue,oldvalue,createdby.name,createddate from CaseHistory where CaseId = '$2' order by createddate desc"
}
function accountHistory(){
    if [ -z "$2" ] 
    then
        2=$1
        1="nesto"
    fi
    sf data query --target-org $1 -q "Select field,newvalue,oldvalue,createdby.name,createddate from AccountHistory where AccountId = '$2' order by createddate desc"
}
function callHistory(){
    sf data query --target-org nesto -q "select id,Five9LSP__Five9_List__r.Name, createddate,lastmodifieddate, lastmodifiedby.name,Five9LSP__Sync_Message__c, isDeleted from Five9LSP__Five9_List_Item__c where (Five9LSP__Opportunity__c = '$1' OR Five9LSP__Lead__c = '$1')" --all-rows $2 $3
}
